{"version":3,"file":"umd.min.js","sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"sourcesContent":["/* global google */\r\n/* eslint-disable filenames/match-regex */\r\nimport { Cluster } from './Cluster'\r\n\r\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\r\n\r\nexport class ClusterIcon {\r\n  cluster: Cluster\r\n  className: string\r\n  clusterClassName: string\r\n  styles: ClusterIconStyle[]\r\n  center: google.maps.LatLng | undefined\r\n  div: HTMLDivElement | null\r\n  sums: ClusterIconInfo | null\r\n  visible: boolean\r\n  url: string | undefined\r\n  svg: string | undefined\r\n  height: number\r\n  width: number\r\n  anchorText: number[]\r\n  anchorIcon: number[]\r\n  textColor: string\r\n  textSize: number\r\n  textDecoration: string\r\n  fontWeight: string\r\n  fontStyle: string\r\n  fontFamily: string\r\n  backgroundPosition: string\r\n  cMouseDownInCluster: boolean | null\r\n  cDraggingMapByCluster: boolean | null\r\n  timeOut: number | null\r\n\r\n  boundsChangedListener: google.maps.MapsEventListener | null\r\n\r\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\r\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\r\n\r\n    this.cluster = cluster\r\n\r\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass()\r\n\r\n    this.className = this.clusterClassName\r\n\r\n    this.styles = styles\r\n\r\n    this.center = undefined\r\n\r\n    this.div = null\r\n\r\n    this.sums = null\r\n\r\n    this.visible = false\r\n\r\n    this.boundsChangedListener = null\r\n\r\n    this.height = 0\r\n    this.width = 0\r\n\r\n    this.anchorText = [0, 0]\r\n    this.anchorIcon = [0, 0]\r\n\r\n    this.textColor = 'black'\r\n    this.textSize = 11\r\n    this.textDecoration = 'none'\r\n    this.fontWeight = 'bold'\r\n    this.fontStyle = 'normal'\r\n    this.fontFamily = 'Arial,sans-serif'\r\n\r\n    this.backgroundPosition = '0 0'\r\n\r\n    this.cMouseDownInCluster = null\r\n    this.cDraggingMapByCluster = null\r\n    this.timeOut = null;\r\n\r\n    (this as unknown as google.maps.OverlayView).setMap(cluster.getMap()) // Note: this causes onAdd to be called\r\n\r\n    this.onBoundsChanged = this.onBoundsChanged.bind(this)\r\n    this.onMouseDown = this.onMouseDown.bind(this)\r\n    this.onClick = this.onClick.bind(this)\r\n    this.onMouseOver = this.onMouseOver.bind(this)\r\n    this.onMouseOut = this.onMouseOut.bind(this)\r\n    this.onAdd = this.onAdd.bind(this)\r\n    this.onRemove = this.onRemove.bind(this)\r\n    this.draw = this.draw.bind(this)\r\n    this.hide = this.hide.bind(this)\r\n    this.show = this.show.bind(this)\r\n    this.useStyle = this.useStyle.bind(this)\r\n    this.setCenter = this.setCenter.bind(this)\r\n    this.getPosFromLatLng = this.getPosFromLatLng.bind(this)\r\n  }\r\n\r\n  onBoundsChanged() {\r\n    this.cDraggingMapByCluster = this.cMouseDownInCluster\r\n  }\r\n\r\n  onMouseDown() {\r\n    this.cMouseDownInCluster = true\r\n\r\n    this.cDraggingMapByCluster = false\r\n  }\r\n\r\n  onClick(event: Event) {\r\n    this.cMouseDownInCluster = false\r\n\r\n    if (!this.cDraggingMapByCluster) {\r\n      const markerClusterer = this.cluster.getClusterer()\r\n\r\n      /**\r\n       * This event is fired when a cluster marker is clicked.\r\n       * @name MarkerClusterer#click\r\n       * @param {Cluster} c The cluster that was clicked.\r\n       * @event\r\n       */\r\n      google.maps.event.trigger(markerClusterer, 'click', this.cluster)\r\n      google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\r\n\r\n      // The default click handler follows. Disable it by setting\r\n      // the zoomOnClick property to false.\r\n      if (markerClusterer.getZoomOnClick()) {\r\n        // Zoom into the cluster.\r\n        const maxZoom = markerClusterer.getMaxZoom()\r\n\r\n        const bounds = this.cluster.getBounds()\r\n\r\n        const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\r\n\r\n        if (map !== null && 'fitBounds' in map) {\r\n          map.fitBounds(bounds)\r\n        }\r\n\r\n\r\n        // There is a fix for Issue 170 here:\r\n        this.timeOut = window.setTimeout(() => {\r\n          const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\r\n\r\n          if (map !== null) {\r\n            if ('fitBounds' in map) {\r\n              map.fitBounds(bounds)\r\n            }\r\n\r\n            const zoom = map.getZoom() || 0\r\n\r\n            // Don't zoom beyond the max zoom level\r\n            if (\r\n              maxZoom !== null &&\r\n              zoom > maxZoom\r\n            ) {\r\n              map.setZoom(maxZoom + 1)\r\n            }\r\n          }\r\n        }, 100)\r\n      }\r\n\r\n      // Prevent event propagation to the map:\r\n      event.cancelBubble = true\r\n\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      }\r\n    }\r\n  }\r\n\r\n  onMouseOver() {\r\n    /**\r\n     * This event is fired when the mouse moves over a cluster marker.\r\n     * @name MarkerClusterer#mouseover\r\n     * @param {Cluster} c The cluster that the mouse moved over.\r\n     * @event\r\n     */\r\n    google.maps.event.trigger(\r\n      this.cluster.getClusterer(),\r\n      'mouseover',\r\n      this.cluster\r\n    )\r\n  }\r\n\r\n  onMouseOut() {\r\n    /**\r\n     * This event is fired when the mouse moves out of a cluster marker.\r\n     * @name MarkerClusterer#mouseout\r\n     * @param {Cluster} c The cluster that the mouse moved out of.\r\n     * @event\r\n     */\r\n    google.maps.event.trigger(\r\n      this.cluster.getClusterer(),\r\n      'mouseout',\r\n      this.cluster\r\n    )\r\n  }\r\n\r\n  onAdd() {\r\n    this.div = document.createElement('div')\r\n\r\n    this.div.className = this.className\r\n\r\n    if (this.visible) {\r\n      this.show()\r\n    }\r\n\r\n    ;(this as unknown as google.maps.OverlayView).getPanes()?.overlayMouseTarget.appendChild(this.div)\r\n\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    if (map !== null) {\r\n      // Fix for Issue 157\r\n      this.boundsChangedListener = google.maps.event.addListener(\r\n        map,\r\n        'bounds_changed',\r\n        this.onBoundsChanged\r\n      )\r\n\r\n      this.div.addEventListener('mousedown', this.onMouseDown)\r\n\r\n      this.div.addEventListener('click', this.onClick)\r\n\r\n      this.div.addEventListener('mouseover', this.onMouseOver)\r\n\r\n      this.div.addEventListener('mouseout', this.onMouseOut)\r\n    }\r\n  }\r\n\r\n  onRemove() {\r\n    if (this.div && this.div.parentNode) {\r\n      this.hide()\r\n\r\n      if (this.boundsChangedListener !== null) {\r\n        google.maps.event.removeListener(this.boundsChangedListener)\r\n      }\r\n\r\n      this.div.removeEventListener('mousedown', this.onMouseDown)\r\n\r\n      this.div.removeEventListener('click', this.onClick)\r\n\r\n      this.div.removeEventListener('mouseover', this.onMouseOver)\r\n\r\n      this.div.removeEventListener('mouseout', this.onMouseOut)\r\n\r\n      this.div.parentNode.removeChild(this.div)\r\n\r\n      if (this.timeOut !== null) {\r\n        window.clearTimeout(this.timeOut)\r\n\r\n        this.timeOut = null\r\n      }\r\n\r\n      this.div = null\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    if (this.visible && this.div !== null && this.center) {\r\n      const pos = this.getPosFromLatLng(this.center)\r\n\r\n      this.div.style.top = pos !== null ? `${pos.y}px` : '0'\r\n      this.div.style.left = pos !== null ? `${pos.x}px` : '0'\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    if (this.div) {\r\n      this.div.style.display = 'none'\r\n    }\r\n\r\n    this.visible = false\r\n  }\r\n\r\n  show() {\r\n    if (this.div && this.center) {\r\n      const divTitle = this.sums === null ||\r\n      typeof this.sums.title === 'undefined' ||\r\n      this.sums.title === '' ? this.cluster.getClusterer().getTitle() :  this.sums.title\r\n\r\n      // NOTE: values must be specified in px units\r\n      const bp = this.backgroundPosition.split(' ')\r\n\r\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\r\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\r\n\r\n      const pos = this.getPosFromLatLng(this.center)\r\n\r\n      this.div.className = this.className\r\n      this.div .setAttribute('style', `cursor: pointer; position: absolute; top: ${pos !== null ? `${pos.y}px` : '0'}; left: ${pos !== null ? `${pos.x}px` : '0'}; width: ${this.width}px; height: ${this.height}px; `)\r\n\r\n\r\n      let clusterIcon : HTMLImageElement | SVGSVGElement;\r\n\r\n\r\n      if(this.url){\r\n        clusterIcon = document.createElement('img')\r\n\r\n        clusterIcon.alt = divTitle\r\n        clusterIcon.src = this.url\r\n        clusterIcon.width = this.width\r\n        clusterIcon.height = this.height\r\n        clusterIcon.setAttribute('style', `position: absolute; top: ${spriteV}px; left: ${spriteH}px`)\r\n  \r\n  \r\n        if (!this.cluster.getClusterer().enableRetinaIcons) {\r\n          clusterIcon.style.clip = `rect(-${spriteV}px, -${spriteH + this.width}px, -${\r\n            spriteV + this.height\r\n          }, -${spriteH})`\r\n        }\r\n      }else if(this.svg){\r\n        // clusterIcon = document.createElementNS('http://www.w3.org/2000/svg','svg');\r\n        // Performance? And careful about HTML Injection!!!\r\n        const temp = document.createElement('div');\r\n        temp.innerHTML = this.svg;\r\n\r\n        const svgElements = temp.getElementsByTagName('svg');\r\n        if(svgElements.length !== 1){\r\n          throw new Error(\"SVG isn't valid. Please provide 1 root svg element\" + this.svg);\r\n        }\r\n        clusterIcon = svgElements[0];\r\n      }else{\r\n        throw new Error(\"Either property svg or url for cluster icon has to be set on clusterer\");\r\n      }\r\n\r\n      const textElm = document.createElement('div')\r\n\r\n      textElm .setAttribute('style', `position: absolute; top: ${this.anchorText[0]}px; left: ${this.anchorText[1]}px; color: ${this.textColor}; font-size: ${this.textSize}px; font-family: ${this.fontFamily}; font-weight: ${this.fontWeight}; fontStyle: ${this.fontStyle}; text-decoration: ${this.textDecoration}; text-align: center; width: ${this.width}px; line-height: ${this.height}px`)\r\n\r\n      if (this.sums?.text) textElm.innerText = `${this.sums?.text}`\r\n      if (this.sums?.html) textElm.innerHTML = `${this.sums?.html}`\r\n\r\n      this.div.innerHTML = ''\r\n\r\n      this.div.appendChild(clusterIcon)\r\n      this.div.appendChild(textElm)\r\n\r\n      this.div.title = divTitle\r\n\r\n      this.div.style.display = ''\r\n    }\r\n\r\n    this.visible = true\r\n  }\r\n\r\n  useStyle(sums: ClusterIconInfo) {\r\n    this.sums = sums\r\n\r\n    const styles = this.cluster.getClusterer().getStyles()\r\n\r\n    const style =\r\n      styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))]\r\n\r\n    this.url = style.url\r\n    this.svg = style.svg\r\n    this.height = style.height\r\n    this.width = style.width\r\n\r\n    if (style.className)\r\n      this.className = `${this.clusterClassName} ${style.className}`\r\n\r\n    this.anchorText = style.anchorText || [0, 0]\r\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\r\n\r\n    this.textColor = style.textColor || 'black'\r\n\r\n    this.textSize = style.textSize || 11\r\n\r\n    this.textDecoration = style.textDecoration || 'none'\r\n\r\n    this.fontWeight = style.fontWeight || 'bold'\r\n\r\n    this.fontStyle = style.fontStyle || 'normal'\r\n\r\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\r\n\r\n    this.backgroundPosition = style.backgroundPosition || '0 0'\r\n  }\r\n\r\n  setCenter(center: google.maps.LatLng) {\r\n    this.center = center\r\n  }\r\n\r\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point | null {\r\n    const pos = (this as unknown as google.maps.OverlayView).getProjection().fromLatLngToDivPixel(latlng)\r\n\r\n    if (pos !== null) {\r\n      pos.x -= this.anchorIcon[1]\r\n\r\n      pos.y -= this.anchorIcon[0]\r\n    }\r\n\r\n    return pos\r\n  }\r\n}\r\n","/* global google */\r\n/* eslint-disable filenames/match-regex */\r\nimport { Clusterer } from './Clusterer'\r\n\r\nimport { ClusterIcon } from './ClusterIcon'\r\n\r\nimport { MarkerExtended } from './types'\r\n\r\nexport class Cluster {\r\n  markerClusterer: Clusterer\r\n  map: google.maps.Map | google.maps.StreetViewPanorama | null\r\n  gridSize: number\r\n  minClusterSize: number\r\n  averageCenter: boolean\r\n  markers: MarkerExtended[]\r\n  center: google.maps.LatLng | undefined\r\n  bounds: google.maps.LatLngBounds | null\r\n  clusterIcon: ClusterIcon\r\n\r\n  constructor(markerClusterer: Clusterer) {\r\n    this.markerClusterer = markerClusterer\r\n\r\n    this.map = (this.markerClusterer as unknown as google.maps.OverlayView).getMap()\r\n\r\n    this.gridSize = this.markerClusterer.getGridSize()\r\n\r\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\r\n\r\n    this.averageCenter = this.markerClusterer.getAverageCenter()\r\n\r\n    this.markers = []\r\n\r\n    this.center = undefined\r\n\r\n    this.bounds = null\r\n\r\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\r\n\r\n    this.getSize = this.getSize.bind(this)\r\n    this.getMarkers = this.getMarkers.bind(this)\r\n    this.getCenter = this.getCenter.bind(this)\r\n    this.getMap = this.getMap.bind(this)\r\n    this.getClusterer = this.getClusterer.bind(this)\r\n    this.getBounds = this.getBounds.bind(this)\r\n    this.remove = this.remove.bind(this)\r\n    this.addMarker = this.addMarker.bind(this)\r\n    this.isMarkerInClusterBounds = this.isMarkerInClusterBounds.bind(this)\r\n    this.calculateBounds = this.calculateBounds.bind(this)\r\n    this.updateIcon = this.updateIcon.bind(this)\r\n    this.isMarkerAlreadyAdded = this.isMarkerAlreadyAdded.bind(this)\r\n  }\r\n\r\n  getSize(): number {\r\n    return this.markers.length\r\n  }\r\n\r\n  getMarkers(): MarkerExtended[] {\r\n    return this.markers\r\n  }\r\n\r\n  getCenter(): google.maps.LatLng | undefined {\r\n    return this.center\r\n  }\r\n\r\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama | null {\r\n    return this.map\r\n  }\r\n\r\n  getClusterer(): Clusterer {\r\n    return this.markerClusterer\r\n  }\r\n\r\n  getBounds(): google.maps.LatLngBounds {\r\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\r\n\r\n    const markers = this.getMarkers()\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      const position = markers[i].getPosition()\r\n\r\n      if (position) {\r\n        bounds.extend(position)\r\n      }\r\n    }\r\n\r\n    return bounds\r\n  }\r\n\r\n  remove() {\r\n    (this.clusterIcon as unknown as google.maps.OverlayView).setMap(null)\r\n\r\n    this.markers = []\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    delete this.markers\r\n  }\r\n\r\n  addMarker(marker: MarkerExtended): boolean {\r\n    if (this.isMarkerAlreadyAdded(marker)) {\r\n      return false\r\n    }\r\n\r\n    if (!this.center) {\r\n      const position = marker.getPosition()\r\n\r\n      if (position) {\r\n        this.center = position\r\n\r\n        this.calculateBounds()\r\n      }\r\n    } else {\r\n      if (this.averageCenter) {\r\n        const position = marker.getPosition()\r\n\r\n        if (position) {\r\n          const length = this.markers.length + 1\r\n\r\n          this.center = new google.maps.LatLng(\r\n            (this.center.lat() * (length - 1) + position.lat()) / length,\r\n            (this.center.lng() * (length - 1) + position.lng()) / length\r\n          )\r\n\r\n          this.calculateBounds()\r\n        }\r\n      }\r\n    }\r\n\r\n    marker.isAdded = true\r\n\r\n    this.markers.push(marker)\r\n\r\n    const mCount = this.markers.length\r\n\r\n    const maxZoom = this.markerClusterer.getMaxZoom()\r\n\r\n    const zoom = this.map?.getZoom()\r\n\r\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\r\n      // Zoomed in past max zoom, so show the marker.\r\n      if (marker.getMap() !== this.map) {\r\n        marker.setMap(this.map)\r\n      }\r\n    } else if (mCount < this.minClusterSize) {\r\n      // Min cluster size not reached so show the marker.\r\n      if (marker.getMap() !== this.map) {\r\n        marker.setMap(this.map)\r\n      }\r\n    } else if (mCount === this.minClusterSize) {\r\n      // Hide the markers that were showing.\r\n      for (let i = 0; i < mCount; i++) {\r\n        this.markers[i].setMap(null)\r\n      }\r\n    } else {\r\n      marker.setMap(null)\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\r\n    if (this.bounds !== null) {\r\n      const position = marker.getPosition()\r\n\r\n      if (position) {\r\n        return this.bounds.contains(position)\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  calculateBounds() {\r\n    this.bounds = this.markerClusterer.getExtendedBounds(\r\n      new google.maps.LatLngBounds(this.center, this.center)\r\n    )\r\n  }\r\n\r\n  updateIcon() {\r\n    const mCount = this.markers.length\r\n\r\n    const maxZoom = this.markerClusterer.getMaxZoom()\r\n\r\n    const zoom = this.map?.getZoom()\r\n\r\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\r\n      this.clusterIcon.hide()\r\n\r\n      return\r\n    }\r\n\r\n    if (mCount < this.minClusterSize) {\r\n      // Min cluster size not yet reached.\r\n      this.clusterIcon.hide()\r\n\r\n      return\r\n    }\r\n\r\n    if (this.center) {\r\n      this.clusterIcon.setCenter(this.center)\r\n    }\r\n\r\n    this.clusterIcon.useStyle(\r\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\r\n    )\r\n\r\n    this.clusterIcon.show()\r\n  }\r\n\r\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\r\n    if (this.markers.includes) {\r\n      return this.markers.includes(marker)\r\n    }\r\n\r\n    for (let i = 0; i < this.markers.length; i++) {\r\n      if (marker === this.markers[i]) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n","/* global google */\r\n/* eslint-disable filenames/match-regex */\r\nimport { Cluster } from './Cluster'\r\nimport { ClusterIcon } from './ClusterIcon'\r\n\r\nimport {\r\n  MarkerExtended,\r\n  ClustererOptions,\r\n  ClusterIconStyle,\r\n  TCalculator,\r\n  ClusterIconInfo,\r\n} from './types'\r\n\r\n/**\r\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\r\n * which is not a problem as max array length is 4294967296 (2**32)\r\n */\r\nfunction CALCULATOR(\r\n  markers: MarkerExtended[],\r\n  numStyles: number\r\n): ClusterIconInfo {\r\n  const count = markers.length\r\n\r\n  const numberOfDigits = count.toString().length\r\n\r\n  const index = Math.min(numberOfDigits, numStyles)\r\n\r\n  return {\r\n    text: count.toString(),\r\n    index,\r\n    title: '',\r\n  }\r\n}\r\n\r\nconst BATCH_SIZE = 2000\r\n\r\nconst BATCH_SIZE_IE = 500\r\n\r\nconst IMAGE_PATH =\r\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\r\n\r\nconst IMAGE_EXTENSION = 'png'\r\n\r\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\r\n\r\nconst CLUSTERER_CLASS = 'cluster'\r\n\r\nexport class Clusterer {\r\n  markers: MarkerExtended[]\r\n  clusters: Cluster[]\r\n  listeners: google.maps.MapsEventListener[]\r\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\r\n  ready: boolean\r\n  gridSize: number\r\n  minClusterSize: number\r\n  maxZoom: number | null\r\n  styles: ClusterIconStyle[]\r\n  title: string\r\n  zoomOnClick: boolean\r\n  averageCenter: boolean\r\n  ignoreHidden: boolean\r\n  enableRetinaIcons: boolean\r\n  imagePath: string\r\n  imageExtension: string\r\n  imageSizes: number[]\r\n  calculator: TCalculator\r\n  batchSize: number\r\n  batchSizeIE: number\r\n  clusterClass: string\r\n  timerRefStatic: number | null\r\n\r\n  constructor(\r\n    map: google.maps.Map,\r\n    optMarkers: MarkerExtended[] = [],\r\n    optOptions: ClustererOptions = {}\r\n  ) {\r\n    this.getMinimumClusterSize = this.getMinimumClusterSize.bind(this)\r\n    this.setMinimumClusterSize = this.setMinimumClusterSize.bind(this)\r\n    this.getEnableRetinaIcons = this.getEnableRetinaIcons.bind(this)\r\n    this.setEnableRetinaIcons = this.setEnableRetinaIcons.bind(this)\r\n    this.addToClosestCluster = this.addToClosestCluster.bind(this)\r\n    this.getImageExtension = this.getImageExtension.bind(this)\r\n    this.setImageExtension = this.setImageExtension.bind(this)\r\n    this.getExtendedBounds = this.getExtendedBounds.bind(this)\r\n    this.getAverageCenter = this.getAverageCenter.bind(this)\r\n    this.setAverageCenter = this.setAverageCenter.bind(this)\r\n    this.getTotalClusters = this.getTotalClusters.bind(this)\r\n    this.fitMapToMarkers = this.fitMapToMarkers.bind(this)\r\n    this.getIgnoreHidden = this.getIgnoreHidden.bind(this)\r\n    this.setIgnoreHidden = this.setIgnoreHidden.bind(this)\r\n    this.getClusterClass = this.getClusterClass.bind(this)\r\n    this.setClusterClass = this.setClusterClass.bind(this)\r\n    this.getTotalMarkers = this.getTotalMarkers.bind(this)\r\n    this.getZoomOnClick = this.getZoomOnClick.bind(this)\r\n    this.setZoomOnClick = this.setZoomOnClick.bind(this)\r\n    this.getBatchSizeIE = this.getBatchSizeIE.bind(this)\r\n    this.setBatchSizeIE = this.setBatchSizeIE.bind(this)\r\n    this.createClusters = this.createClusters.bind(this)\r\n    this.onZoomChanged = this.onZoomChanged.bind(this)\r\n    this.getImageSizes = this.getImageSizes.bind(this)\r\n    this.setImageSizes = this.setImageSizes.bind(this)\r\n    this.getCalculator = this.getCalculator.bind(this)\r\n    this.setCalculator = this.setCalculator.bind(this)\r\n    this.removeMarkers = this.removeMarkers.bind(this)\r\n    this.resetViewport = this.resetViewport.bind(this)\r\n    this.getImagePath = this.getImagePath.bind(this)\r\n    this.setImagePath = this.setImagePath.bind(this)\r\n    this.pushMarkerTo = this.pushMarkerTo.bind(this)\r\n    this.removeMarker = this.removeMarker.bind(this)\r\n    this.clearMarkers = this.clearMarkers.bind(this)\r\n    this.setupStyles = this.setupStyles.bind(this)\r\n    this.getGridSize = this.getGridSize.bind(this)\r\n    this.setGridSize = this.setGridSize.bind(this)\r\n    this.getClusters = this.getClusters.bind(this)\r\n    this.getMaxZoom = this.getMaxZoom.bind(this)\r\n    this.setMaxZoom = this.setMaxZoom.bind(this)\r\n    this.getMarkers = this.getMarkers.bind(this)\r\n    this.addMarkers = this.addMarkers.bind(this)\r\n    this.getStyles = this.getStyles.bind(this)\r\n    this.setStyles = this.setStyles.bind(this)\r\n    this.addMarker = this.addMarker.bind(this)\r\n    this.onRemove = this.onRemove.bind(this)\r\n    this.getTitle = this.getTitle.bind(this)\r\n    this.setTitle = this.setTitle.bind(this)\r\n    this.repaint = this.repaint.bind(this)\r\n    this.onIdle = this.onIdle.bind(this)\r\n    this.redraw = this.redraw.bind(this)\r\n    this.extend = this.extend.bind(this)\r\n    this.onAdd = this.onAdd.bind(this)\r\n    this.draw = this.draw.bind(this)\r\n\r\n    this.extend(Clusterer, google.maps.OverlayView)\r\n\r\n    this.markers = []\r\n    this.clusters = []\r\n    this.listeners = []\r\n    this.activeMap = null\r\n    this.ready = false\r\n    this.gridSize = optOptions.gridSize || 60\r\n    this.minClusterSize = optOptions.minimumClusterSize || 2\r\n    this.maxZoom = optOptions.maxZoom || null\r\n    this.styles = optOptions.styles || []\r\n\r\n    this.title = optOptions.title || ''\r\n\r\n    this.zoomOnClick = true\r\n\r\n    if (optOptions.zoomOnClick !== undefined) {\r\n      this.zoomOnClick = optOptions.zoomOnClick\r\n    }\r\n\r\n    this.averageCenter = false\r\n\r\n    if (optOptions.averageCenter !== undefined) {\r\n      this.averageCenter = optOptions.averageCenter\r\n    }\r\n\r\n    this.ignoreHidden = false\r\n\r\n    if (optOptions.ignoreHidden !== undefined) {\r\n      this.ignoreHidden = optOptions.ignoreHidden\r\n    }\r\n\r\n    this.enableRetinaIcons = false\r\n\r\n    if (optOptions.enableRetinaIcons !== undefined) {\r\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\r\n    }\r\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\r\n\r\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\r\n\r\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\r\n\r\n    this.calculator = optOptions.calculator || CALCULATOR\r\n\r\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\r\n\r\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\r\n\r\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\r\n\r\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\r\n      // Try to avoid IE timeout when processing a huge number of markers:\r\n      this.batchSize = this.batchSizeIE\r\n    }\r\n\r\n    this.timerRefStatic = null\r\n\r\n    this.setupStyles()\r\n\r\n    this.addMarkers(optMarkers, true);\r\n\r\n    (this as unknown as google.maps.OverlayView).setMap(map) // Note: this causes onAdd to be called\r\n  }\r\n\r\n  onZoomChanged() {\r\n    this.resetViewport(false)\r\n\r\n    // Workaround for this Google bug: when map is at level 0 and \"-\" of\r\n    // zoom slider is clicked, a \"zoom_changed\" event is fired even though\r\n    // the map doesn't zoom out any further. In this situation, no \"idle\"\r\n    // event is triggered so the cluster markers that have been removed\r\n    // do not get redrawn. Same goes for a zoom in at maxZoom.\r\n    if (\r\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === ((this as unknown as google.maps.OverlayView).get('minZoom') || 0) ||\r\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === (this as unknown as google.maps.OverlayView).get('maxZoom')\r\n    ) {\r\n      google.maps.event.trigger(this, 'idle')\r\n    }\r\n  }\r\n\r\n  onIdle() {\r\n    this.redraw()\r\n  }\r\n\r\n  onAdd() {\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    this.activeMap = map\r\n\r\n    this.ready = true\r\n\r\n    this.repaint()\r\n\r\n    if (map !== null) {\r\n      // Add the map event listeners\r\n      this.listeners = [\r\n        google.maps.event.addListener(\r\n          map,\r\n          'zoom_changed',\r\n          this.onZoomChanged\r\n        ),\r\n        google.maps.event.addListener(\r\n          map,\r\n          'idle',\r\n          this.onIdle\r\n        ),\r\n      ]\r\n    }\r\n  }\r\n\r\n  onRemove() {\r\n    // Put all the managed markers back on the map:\r\n    for (let i = 0; i < this.markers.length; i++) {\r\n      if (this.markers[i].getMap() !== this.activeMap) {\r\n        this.markers[i].setMap(this.activeMap)\r\n      }\r\n    }\r\n\r\n    // Remove all clusters:\r\n    for (let i = 0; i < this.clusters.length; i++) {\r\n      this.clusters[i].remove()\r\n    }\r\n\r\n    this.clusters = []\r\n\r\n    // Remove map event listeners:\r\n    for (let i = 0; i < this.listeners.length; i++) {\r\n      google.maps.event.removeListener(this.listeners[i])\r\n    }\r\n\r\n    this.listeners = []\r\n\r\n    this.activeMap = null\r\n\r\n    this.ready = false\r\n  }\r\n\r\n  draw() { return }\r\n\r\n  setupStyles() {\r\n    if (this.styles.length > 0) {\r\n      return\r\n    }\r\n\r\n    for (let i = 0; i < this.imageSizes.length; i++) {\r\n      this.styles.push({\r\n        url: `${this.imagePath + (i + 1)}.${this.imageExtension}`,\r\n        height: this.imageSizes[i],\r\n        width: this.imageSizes[i],\r\n      })\r\n    }\r\n  }\r\n\r\n  fitMapToMarkers() {\r\n    const markers = this.getMarkers()\r\n\r\n    const bounds = new google.maps.LatLngBounds()\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      const position = markers[i].getPosition()\r\n\r\n      if (position) {\r\n        bounds.extend(position)\r\n      }\r\n    }\r\n\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    if (map !== null && 'fitBounds' in map) {\r\n      map.fitBounds(bounds)\r\n    }\r\n\r\n  }\r\n\r\n  getGridSize(): number {\r\n    return this.gridSize\r\n  }\r\n\r\n  setGridSize(gridSize: number) {\r\n    this.gridSize = gridSize\r\n  }\r\n\r\n  getMinimumClusterSize(): number {\r\n    return this.minClusterSize\r\n  }\r\n\r\n  setMinimumClusterSize(minimumClusterSize: number) {\r\n    this.minClusterSize = minimumClusterSize\r\n  }\r\n\r\n  getMaxZoom(): number | null {\r\n    return this.maxZoom\r\n  }\r\n\r\n  setMaxZoom(maxZoom: number) {\r\n    this.maxZoom = maxZoom\r\n  }\r\n\r\n  getStyles(): ClusterIconStyle[] {\r\n    return this.styles\r\n  }\r\n\r\n  setStyles(styles: ClusterIconStyle[]) {\r\n    this.styles = styles\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.title\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.title = title\r\n  }\r\n\r\n  getZoomOnClick(): boolean {\r\n    return this.zoomOnClick\r\n  }\r\n\r\n  setZoomOnClick(zoomOnClick: boolean) {\r\n    this.zoomOnClick = zoomOnClick\r\n  }\r\n\r\n  getAverageCenter(): boolean {\r\n    return this.averageCenter\r\n  }\r\n\r\n  setAverageCenter(averageCenter: boolean) {\r\n    this.averageCenter = averageCenter\r\n  }\r\n\r\n  getIgnoreHidden(): boolean {\r\n    return this.ignoreHidden\r\n  }\r\n\r\n  setIgnoreHidden(ignoreHidden: boolean) {\r\n    this.ignoreHidden = ignoreHidden\r\n  }\r\n\r\n  getEnableRetinaIcons(): boolean {\r\n    return this.enableRetinaIcons\r\n  }\r\n\r\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\r\n    this.enableRetinaIcons = enableRetinaIcons\r\n  }\r\n\r\n  getImageExtension(): string {\r\n    return this.imageExtension\r\n  }\r\n\r\n  setImageExtension(imageExtension: string) {\r\n    this.imageExtension = imageExtension\r\n  }\r\n\r\n  getImagePath(): string {\r\n    return this.imagePath\r\n  }\r\n\r\n  setImagePath(imagePath: string) {\r\n    this.imagePath = imagePath\r\n  }\r\n\r\n  getImageSizes(): number[] {\r\n    return this.imageSizes\r\n  }\r\n\r\n  setImageSizes(imageSizes: number[]) {\r\n    this.imageSizes = imageSizes\r\n  }\r\n\r\n  getCalculator(): TCalculator {\r\n    return this.calculator\r\n  }\r\n\r\n  setCalculator(calculator: TCalculator) {\r\n    this.calculator = calculator\r\n  }\r\n\r\n  getBatchSizeIE(): number {\r\n    return this.batchSizeIE\r\n  }\r\n\r\n  setBatchSizeIE(batchSizeIE: number) {\r\n    this.batchSizeIE = batchSizeIE\r\n  }\r\n\r\n  getClusterClass(): string {\r\n    return this.clusterClass\r\n  }\r\n\r\n  setClusterClass(clusterClass: string) {\r\n    this.clusterClass = clusterClass\r\n  }\r\n\r\n  getMarkers(): MarkerExtended[] {\r\n    return this.markers\r\n  }\r\n\r\n  getTotalMarkers(): number {\r\n    return this.markers.length\r\n  }\r\n\r\n  getClusters(): Cluster[] {\r\n    return this.clusters\r\n  }\r\n\r\n  getTotalClusters(): number {\r\n    return this.clusters.length\r\n  }\r\n\r\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\r\n    this.pushMarkerTo(marker)\r\n\r\n    if (!optNoDraw) {\r\n      this.redraw()\r\n    }\r\n  }\r\n\r\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\r\n    for (const key in markers) {\r\n      if (Object.prototype.hasOwnProperty.call(markers, key)) {\r\n        this.pushMarkerTo(markers[key])\r\n      }\r\n    }\r\n\r\n    if (!optNoDraw) {\r\n      this.redraw()\r\n    }\r\n  }\r\n\r\n  pushMarkerTo(marker: MarkerExtended) {\r\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\r\n    if (marker.getDraggable()) {\r\n      google.maps.event.addListener(marker, 'dragend', () => {\r\n        if (this.ready) {\r\n          marker.isAdded = false\r\n\r\n          this.repaint()\r\n        }\r\n      })\r\n    }\r\n\r\n    marker.isAdded = false\r\n\r\n    this.markers.push(marker)\r\n  }\r\n\r\n  removeMarker_(marker: MarkerExtended): boolean {\r\n    let index = -1\r\n\r\n    if (this.markers.indexOf) {\r\n      index = this.markers.indexOf(marker)\r\n    } else {\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        if (marker === this.markers[i]) {\r\n          index = i\r\n\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (index === -1) {\r\n      // Marker is not in our list of markers, so do nothing:\r\n      return false\r\n    }\r\n\r\n    marker.setMap(null)\r\n\r\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\r\n\r\n    return true\r\n  }\r\n\r\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\r\n    const removed = this.removeMarker_(marker)\r\n\r\n    if (!optNoDraw && removed) {\r\n      this.repaint()\r\n    }\r\n\r\n    return removed\r\n  }\r\n\r\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\r\n    let removed = false\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      removed = removed || this.removeMarker_(markers[i])\r\n    }\r\n\r\n    if (!optNoDraw && removed) {\r\n      this.repaint()\r\n    }\r\n\r\n    return removed\r\n  }\r\n\r\n  clearMarkers() {\r\n    this.resetViewport(true)\r\n\r\n    this.markers = []\r\n  }\r\n\r\n  repaint() {\r\n    const oldClusters = this.clusters.slice()\r\n\r\n    this.clusters = []\r\n\r\n    this.resetViewport(false)\r\n\r\n    this.redraw()\r\n\r\n    // Remove the old clusters.\r\n    // Do it in a timeout to prevent blinking effect.\r\n    setTimeout(function timeout() {\r\n      for (let i = 0; i < oldClusters.length; i++) {\r\n        oldClusters[i].remove()\r\n      }\r\n    }, 0)\r\n  }\r\n\r\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\r\n    const projection = (this as unknown as google.maps.OverlayView).getProjection()\r\n\r\n    // Convert the points to pixels and the extend out by the grid size.\r\n    const trPix = projection.fromLatLngToDivPixel(\r\n      // Turn the bounds into latlng.\r\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\r\n    )\r\n\r\n    if (trPix !== null) {\r\n      trPix.x += this.gridSize\r\n      trPix.y -= this.gridSize\r\n    }\r\n\r\n    const blPix = projection.fromLatLngToDivPixel(\r\n      // Turn the bounds into latlng.\r\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\r\n    )\r\n\r\n    if (blPix !== null) {\r\n      blPix.x -= this.gridSize\r\n      blPix.y += this.gridSize\r\n    }\r\n\r\n\r\n    // Extend the bounds to contain the new bounds.\r\n    if (trPix !== null) {\r\n      // Convert the pixel points back to LatLng nw\r\n      const point1 = projection.fromDivPixelToLatLng(trPix)\r\n\r\n      if (point1 !== null) {\r\n        bounds.extend(point1)\r\n      }\r\n    }\r\n\r\n    if (blPix !== null) {\r\n      // Convert the pixel points back to LatLng sw\r\n      const point2 =  projection.fromDivPixelToLatLng(blPix)\r\n\r\n      if (point2 !== null) {\r\n        bounds.extend(\r\n          point2\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n    return bounds\r\n  }\r\n\r\n  redraw() {\r\n    // Redraws all the clusters.\r\n    this.createClusters(0)\r\n  }\r\n\r\n  resetViewport(optHide: boolean) {\r\n    // Remove all the clusters\r\n    for (let i = 0; i < this.clusters.length; i++) {\r\n      this.clusters[i].remove()\r\n    }\r\n\r\n    this.clusters = []\r\n\r\n    // Reset the markers to not be added and to be removed from the map.\r\n    for (let i = 0; i < this.markers.length; i++) {\r\n      const marker = this.markers[i]\r\n\r\n      marker.isAdded = false\r\n\r\n      if (optHide) {\r\n        marker.setMap(null)\r\n      }\r\n    }\r\n  }\r\n\r\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\r\n    const R = 6371 // Radius of the Earth in km\r\n\r\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\r\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\r\n\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((p1.lat() * Math.PI) / 180) *\r\n        Math.cos((p2.lat() * Math.PI) / 180) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2)\r\n\r\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\r\n  }\r\n\r\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\r\n    const position = marker.getPosition()\r\n\r\n    if (position) {\r\n      return bounds.contains(position)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  addToClosestCluster(marker: MarkerExtended) {\r\n    let cluster\r\n\r\n    let distance = 40000 // Some large number\r\n\r\n    let clusterToAddTo = null\r\n\r\n    for (let i = 0; i < this.clusters.length; i++) {\r\n      cluster = this.clusters[i]\r\n\r\n      const center = cluster.getCenter()\r\n\r\n      const position = marker.getPosition()\r\n\r\n      if (center && position) {\r\n        const d = this.distanceBetweenPoints(center, position)\r\n\r\n        if (d < distance) {\r\n          distance = d\r\n\r\n          clusterToAddTo = cluster\r\n        }\r\n      }\r\n    }\r\n\r\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\r\n      clusterToAddTo.addMarker(marker)\r\n    } else {\r\n      cluster = new Cluster(this)\r\n\r\n      cluster.addMarker(marker)\r\n\r\n      this.clusters.push(cluster)\r\n    }\r\n  }\r\n\r\n  createClusters(iFirst: number) {\r\n    if (!this.ready) {\r\n      return\r\n    }\r\n\r\n    // Cancel previous batch processing if we're working on the first batch:\r\n    if (iFirst === 0) {\r\n      /**\r\n       * This event is fired when the <code>Clusterer</code> begins\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringbegin\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\r\n      google.maps.event.trigger(this, 'clusteringbegin', this)\r\n\r\n      if (this.timerRefStatic !== null) {\r\n        window.clearTimeout(this.timerRefStatic)\r\n\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        delete this.timerRefStatic\r\n      }\r\n    }\r\n\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    const bounds = map !== null && 'getBounds' in map ? map.getBounds() : null\r\n\r\n    const zoom =  map?.getZoom() || 0\r\n    // Get our current map view bounds.\r\n    // Create a new bounds object so we don't affect the map.\r\n    //\r\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\r\n    const mapBounds = zoom > 3\r\n        ? new google.maps.LatLngBounds(\r\n            bounds?.getSouthWest(),\r\n            bounds?.getNorthEast()\r\n          )\r\n        : new google.maps.LatLngBounds(\r\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\r\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\r\n          )\r\n\r\n    const extendedMapBounds = this.getExtendedBounds(mapBounds)\r\n\r\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\r\n\r\n    for (let i = iFirst; i < iLast; i++) {\r\n      const marker = this.markers[i]\r\n\r\n      if (!marker.isAdded && this.isMarkerInBounds(marker, extendedMapBounds) && (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible()))) {\r\n        this.addToClosestCluster(marker)\r\n      }\r\n    }\r\n\r\n    if (iLast < this.markers.length) {\r\n      this.timerRefStatic = window.setTimeout(\r\n        () => {\r\n          this.createClusters(iLast)\r\n        },\r\n        0\r\n      )\r\n    } else {\r\n      this.timerRefStatic = null\r\n\r\n      /**\r\n       * This event is fired when the <code>Clusterer</code> stops\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringend\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\r\n      google.maps.event.trigger(this, 'clusteringend', this)\r\n\r\n      for (let i = 0; i < this.clusters.length; i++) {\r\n        this.clusters[i].updateIcon()\r\n      }\r\n    }\r\n  }\r\n\r\n  extend<A extends typeof ClusterIcon | typeof Clusterer>(obj1: A, obj2: typeof google.maps.OverlayView): A {\r\n    return function applyExtend(this: A, object: typeof google.maps.OverlayView): A {\r\n      for (const property in object.prototype) {\r\n        // @ts-ignore\r\n        this.prototype[property] = object.prototype[property  as keyof google.maps.OverlayView]\r\n      }\r\n\r\n      return this\r\n    }.apply<A, [typeof google.maps.OverlayView], any>(obj1, [obj2])\r\n  }\r\n}\r\n"],"names":["ClusterIcon","cluster","styles","getClusterer","extend","google","maps","OverlayView","this","clusterClassName","getClusterClass","className","center","undefined","div","sums","visible","boundsChangedListener","height","width","anchorText","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","cMouseDownInCluster","cDraggingMapByCluster","timeOut","setMap","getMap","onBoundsChanged","bind","onMouseDown","onClick","onMouseOver","onMouseOut","onAdd","onRemove","draw","hide","show","useStyle","setCenter","getPosFromLatLng","prototype","event","markerClusterer_1","trigger","getZoomOnClick","maxZoom_1","getMaxZoom","bounds_1","getBounds","map","fitBounds","window","setTimeout","zoom","getZoom","setZoom","cancelBubble","stopPropagation","document","createElement","_a","getPanes","overlayMouseTarget","appendChild","addListener","addEventListener","parentNode","removeListener","removeEventListener","removeChild","clearTimeout","pos","style","top","concat","y","left","x","display","divTitle","title","getTitle","bp","split","spriteH","parseInt","replace","spriteV","setAttribute","clusterIcon","url","alt","src","enableRetinaIcons","clip","svg","Error","temp","innerHTML","svgElements","getElementsByTagName","length","textElm","text","innerText","_b","_c","html","_d","getStyles","Math","min","max","index","latlng","getProjection","fromLatLngToDivPixel","Cluster","markerClusterer","gridSize","getGridSize","minClusterSize","getMinimumClusterSize","averageCenter","getAverageCenter","markers","bounds","getSize","getMarkers","getCenter","remove","addMarker","isMarkerInClusterBounds","calculateBounds","updateIcon","isMarkerAlreadyAdded","LatLngBounds","i","position","getPosition","marker","length_1","LatLng","lat","lng","isAdded","push","mCount","maxZoom","contains","getExtendedBounds","getCalculator","includes","CALCULATOR","numStyles","count","numberOfDigits","toString","BATCH_SIZE","BATCH_SIZE_IE","IMAGE_PATH","IMAGE_EXTENSION","IMAGE_SIZES","CLUSTERER_CLASS","Clusterer","optMarkers","optOptions","setMinimumClusterSize","getEnableRetinaIcons","setEnableRetinaIcons","addToClosestCluster","getImageExtension","setImageExtension","setAverageCenter","getTotalClusters","fitMapToMarkers","getIgnoreHidden","setIgnoreHidden","setClusterClass","getTotalMarkers","setZoomOnClick","getBatchSizeIE","setBatchSizeIE","createClusters","onZoomChanged","getImageSizes","setImageSizes","setCalculator","removeMarkers","resetViewport","getImagePath","setImagePath","pushMarkerTo","removeMarker","clearMarkers","setupStyles","setGridSize","getClusters","setMaxZoom","addMarkers","setStyles","setTitle","repaint","onIdle","redraw","clusters","listeners","activeMap","ready","minimumClusterSize","zoomOnClick","ignoreHidden","imagePath","imageExtension","imageSizes","calculator","batchSize","batchSizeIE","clusterClass","navigator","userAgent","toLowerCase","indexOf","timerRefStatic","get","optNoDraw","key","Object","hasOwnProperty","call","_this","getDraggable","removeMarker_","splice","removed","oldClusters","slice","projection","trPix","getNorthEast","blPix","getSouthWest","point1","fromDivPixelToLatLng","point2","optHide","distanceBetweenPoints","p1","p2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds","distance","clusterToAddTo","d","iFirst","mapBounds","extendedMapBounds","iLast","getVisible","obj1","obj2","object","property","apply"],"mappings":"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"}