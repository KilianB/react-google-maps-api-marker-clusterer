{"version":3,"file":"esm.js","sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"sourcesContent":["/* global google */\r\n/* eslint-disable filenames/match-regex */\r\nimport { Cluster } from './Cluster'\r\n\r\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\r\n\r\nexport class ClusterIcon {\r\n  cluster: Cluster\r\n  className: string\r\n  clusterClassName: string\r\n  styles: ClusterIconStyle[]\r\n  center: google.maps.LatLng | undefined\r\n  div: HTMLDivElement | null\r\n  sums: ClusterIconInfo | null\r\n  visible: boolean\r\n  url: string | undefined\r\n  svg: string | undefined\r\n  height: number\r\n  width: number\r\n  anchorText: number[]\r\n  anchorIcon: number[]\r\n  textColor: string\r\n  textSize: number\r\n  textDecoration: string\r\n  fontWeight: string\r\n  fontStyle: string\r\n  fontFamily: string\r\n  backgroundPosition: string\r\n  cMouseDownInCluster: boolean | null\r\n  cDraggingMapByCluster: boolean | null\r\n  timeOut: number | null\r\n\r\n  boundsChangedListener: google.maps.MapsEventListener | null\r\n\r\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\r\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\r\n\r\n    this.cluster = cluster\r\n\r\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass()\r\n\r\n    this.className = this.clusterClassName\r\n\r\n    this.styles = styles\r\n\r\n    this.center = undefined\r\n\r\n    this.div = null\r\n\r\n    this.sums = null\r\n\r\n    this.visible = false\r\n\r\n    this.boundsChangedListener = null\r\n\r\n    this.height = 0\r\n    this.width = 0\r\n\r\n    this.anchorText = [0, 0]\r\n    this.anchorIcon = [0, 0]\r\n\r\n    this.textColor = 'black'\r\n    this.textSize = 11\r\n    this.textDecoration = 'none'\r\n    this.fontWeight = 'bold'\r\n    this.fontStyle = 'normal'\r\n    this.fontFamily = 'Arial,sans-serif'\r\n\r\n    this.backgroundPosition = '0 0'\r\n\r\n    this.cMouseDownInCluster = null\r\n    this.cDraggingMapByCluster = null\r\n    this.timeOut = null;\r\n\r\n    (this as unknown as google.maps.OverlayView).setMap(cluster.getMap()) // Note: this causes onAdd to be called\r\n\r\n    this.onBoundsChanged = this.onBoundsChanged.bind(this)\r\n    this.onMouseDown = this.onMouseDown.bind(this)\r\n    this.onClick = this.onClick.bind(this)\r\n    this.onMouseOver = this.onMouseOver.bind(this)\r\n    this.onMouseOut = this.onMouseOut.bind(this)\r\n    this.onAdd = this.onAdd.bind(this)\r\n    this.onRemove = this.onRemove.bind(this)\r\n    this.draw = this.draw.bind(this)\r\n    this.hide = this.hide.bind(this)\r\n    this.show = this.show.bind(this)\r\n    this.useStyle = this.useStyle.bind(this)\r\n    this.setCenter = this.setCenter.bind(this)\r\n    this.getPosFromLatLng = this.getPosFromLatLng.bind(this)\r\n  }\r\n\r\n  onBoundsChanged() {\r\n    this.cDraggingMapByCluster = this.cMouseDownInCluster\r\n  }\r\n\r\n  onMouseDown() {\r\n    this.cMouseDownInCluster = true\r\n\r\n    this.cDraggingMapByCluster = false\r\n  }\r\n\r\n  onClick(event: Event) {\r\n    this.cMouseDownInCluster = false\r\n\r\n    if (!this.cDraggingMapByCluster) {\r\n      const markerClusterer = this.cluster.getClusterer()\r\n\r\n      /**\r\n       * This event is fired when a cluster marker is clicked.\r\n       * @name MarkerClusterer#click\r\n       * @param {Cluster} c The cluster that was clicked.\r\n       * @event\r\n       */\r\n      google.maps.event.trigger(markerClusterer, 'click', this.cluster)\r\n      google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\r\n\r\n      // The default click handler follows. Disable it by setting\r\n      // the zoomOnClick property to false.\r\n      if (markerClusterer.getZoomOnClick()) {\r\n        // Zoom into the cluster.\r\n        const maxZoom = markerClusterer.getMaxZoom()\r\n\r\n        const bounds = this.cluster.getBounds()\r\n\r\n        const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\r\n\r\n        if (map !== null && 'fitBounds' in map) {\r\n          map.fitBounds(bounds)\r\n        }\r\n\r\n\r\n        // There is a fix for Issue 170 here:\r\n        this.timeOut = window.setTimeout(() => {\r\n          const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\r\n\r\n          if (map !== null) {\r\n            if ('fitBounds' in map) {\r\n              map.fitBounds(bounds)\r\n            }\r\n\r\n            const zoom = map.getZoom() || 0\r\n\r\n            // Don't zoom beyond the max zoom level\r\n            if (\r\n              maxZoom !== null &&\r\n              zoom > maxZoom\r\n            ) {\r\n              map.setZoom(maxZoom + 1)\r\n            }\r\n          }\r\n        }, 100)\r\n      }\r\n\r\n      // Prevent event propagation to the map:\r\n      event.cancelBubble = true\r\n\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      }\r\n    }\r\n  }\r\n\r\n  onMouseOver() {\r\n    /**\r\n     * This event is fired when the mouse moves over a cluster marker.\r\n     * @name MarkerClusterer#mouseover\r\n     * @param {Cluster} c The cluster that the mouse moved over.\r\n     * @event\r\n     */\r\n    google.maps.event.trigger(\r\n      this.cluster.getClusterer(),\r\n      'mouseover',\r\n      this.cluster\r\n    )\r\n  }\r\n\r\n  onMouseOut() {\r\n    /**\r\n     * This event is fired when the mouse moves out of a cluster marker.\r\n     * @name MarkerClusterer#mouseout\r\n     * @param {Cluster} c The cluster that the mouse moved out of.\r\n     * @event\r\n     */\r\n    google.maps.event.trigger(\r\n      this.cluster.getClusterer(),\r\n      'mouseout',\r\n      this.cluster\r\n    )\r\n  }\r\n\r\n  onAdd() {\r\n    this.div = document.createElement('div')\r\n\r\n    this.div.className = this.className\r\n\r\n    if (this.visible) {\r\n      this.show()\r\n    }\r\n\r\n    ;(this as unknown as google.maps.OverlayView).getPanes()?.overlayMouseTarget.appendChild(this.div)\r\n\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    if (map !== null) {\r\n      // Fix for Issue 157\r\n      this.boundsChangedListener = google.maps.event.addListener(\r\n        map,\r\n        'bounds_changed',\r\n        this.onBoundsChanged\r\n      )\r\n\r\n      this.div.addEventListener('mousedown', this.onMouseDown)\r\n\r\n      this.div.addEventListener('click', this.onClick)\r\n\r\n      this.div.addEventListener('mouseover', this.onMouseOver)\r\n\r\n      this.div.addEventListener('mouseout', this.onMouseOut)\r\n    }\r\n  }\r\n\r\n  onRemove() {\r\n    if (this.div && this.div.parentNode) {\r\n      this.hide()\r\n\r\n      if (this.boundsChangedListener !== null) {\r\n        google.maps.event.removeListener(this.boundsChangedListener)\r\n      }\r\n\r\n      this.div.removeEventListener('mousedown', this.onMouseDown)\r\n\r\n      this.div.removeEventListener('click', this.onClick)\r\n\r\n      this.div.removeEventListener('mouseover', this.onMouseOver)\r\n\r\n      this.div.removeEventListener('mouseout', this.onMouseOut)\r\n\r\n      this.div.parentNode.removeChild(this.div)\r\n\r\n      if (this.timeOut !== null) {\r\n        window.clearTimeout(this.timeOut)\r\n\r\n        this.timeOut = null\r\n      }\r\n\r\n      this.div = null\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    if (this.visible && this.div !== null && this.center) {\r\n      const pos = this.getPosFromLatLng(this.center)\r\n\r\n      this.div.style.top = pos !== null ? `${pos.y}px` : '0'\r\n      this.div.style.left = pos !== null ? `${pos.x}px` : '0'\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    if (this.div) {\r\n      this.div.style.display = 'none'\r\n    }\r\n\r\n    this.visible = false\r\n  }\r\n\r\n  show() {\r\n    if (this.div && this.center) {\r\n      const divTitle = this.sums === null ||\r\n      typeof this.sums.title === 'undefined' ||\r\n      this.sums.title === '' ? this.cluster.getClusterer().getTitle() :  this.sums.title\r\n\r\n      // NOTE: values must be specified in px units\r\n      const bp = this.backgroundPosition.split(' ')\r\n\r\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\r\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\r\n\r\n      const pos = this.getPosFromLatLng(this.center)\r\n\r\n      this.div.className = this.className\r\n      this.div .setAttribute('style', `cursor: pointer; position: absolute; top: ${pos !== null ? `${pos.y}px` : '0'}; left: ${pos !== null ? `${pos.x}px` : '0'}; width: ${this.width}px; height: ${this.height}px; `)\r\n\r\n\r\n      let clusterIcon : HTMLImageElement | SVGSVGElement;\r\n\r\n\r\n      if(this.url){\r\n        clusterIcon = document.createElement('img')\r\n\r\n        clusterIcon.alt = divTitle\r\n        clusterIcon.src = this.url\r\n        clusterIcon.width = this.width\r\n        clusterIcon.height = this.height\r\n        clusterIcon.setAttribute('style', `position: absolute; top: ${spriteV}px; left: ${spriteH}px`)\r\n  \r\n  \r\n        if (!this.cluster.getClusterer().enableRetinaIcons) {\r\n          clusterIcon.style.clip = `rect(-${spriteV}px, -${spriteH + this.width}px, -${\r\n            spriteV + this.height\r\n          }, -${spriteH})`\r\n        }\r\n      }else if(this.svg){\r\n        // clusterIcon = document.createElementNS('http://www.w3.org/2000/svg','svg');\r\n        // Performance? And careful about HTML Injection!!!\r\n        const temp = document.createElement('div');\r\n        temp.innerHTML = this.svg;\r\n\r\n        const svgElements = temp.getElementsByTagName('svg');\r\n        if(svgElements.length !== 0){\r\n          throw new Error(\"SVG isn't valid. Please provide 1 root svg element\" + this.svg);\r\n        }\r\n        clusterIcon = svgElements[0];\r\n      }else{\r\n        throw new Error(\"Either property svg or url for cluster icon has to be set on clusterer\");\r\n      }\r\n\r\n      const textElm = document.createElement('div')\r\n\r\n      textElm .setAttribute('style', `position: absolute; top: ${this.anchorText[0]}px; left: ${this.anchorText[1]}px; color: ${this.textColor}; font-size: ${this.textSize}px; font-family: ${this.fontFamily}; font-weight: ${this.fontWeight}; fontStyle: ${this.fontStyle}; text-decoration: ${this.textDecoration}; text-align: center; width: ${this.width}px; line-height: ${this.height}px`)\r\n\r\n      if (this.sums?.text) textElm.innerText = `${this.sums?.text}`\r\n      if (this.sums?.html) textElm.innerHTML = `${this.sums?.html}`\r\n\r\n      this.div.innerHTML = ''\r\n\r\n      this.div.appendChild(clusterIcon)\r\n      this.div.appendChild(textElm)\r\n\r\n      this.div.title = divTitle\r\n\r\n      this.div.style.display = ''\r\n    }\r\n\r\n    this.visible = true\r\n  }\r\n\r\n  useStyle(sums: ClusterIconInfo) {\r\n    this.sums = sums\r\n\r\n    const styles = this.cluster.getClusterer().getStyles()\r\n\r\n    const style =\r\n      styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))]\r\n\r\n    this.url = style.url\r\n    this.svg = style.svg\r\n    this.height = style.height\r\n    this.width = style.width\r\n\r\n    if (style.className)\r\n      this.className = `${this.clusterClassName} ${style.className}`\r\n\r\n    this.anchorText = style.anchorText || [0, 0]\r\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\r\n\r\n    this.textColor = style.textColor || 'black'\r\n\r\n    this.textSize = style.textSize || 11\r\n\r\n    this.textDecoration = style.textDecoration || 'none'\r\n\r\n    this.fontWeight = style.fontWeight || 'bold'\r\n\r\n    this.fontStyle = style.fontStyle || 'normal'\r\n\r\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\r\n\r\n    this.backgroundPosition = style.backgroundPosition || '0 0'\r\n  }\r\n\r\n  setCenter(center: google.maps.LatLng) {\r\n    this.center = center\r\n  }\r\n\r\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point | null {\r\n    const pos = (this as unknown as google.maps.OverlayView).getProjection().fromLatLngToDivPixel(latlng)\r\n\r\n    if (pos !== null) {\r\n      pos.x -= this.anchorIcon[1]\r\n\r\n      pos.y -= this.anchorIcon[0]\r\n    }\r\n\r\n    return pos\r\n  }\r\n}\r\n","/* global google */\r\n/* eslint-disable filenames/match-regex */\r\nimport { Clusterer } from './Clusterer'\r\n\r\nimport { ClusterIcon } from './ClusterIcon'\r\n\r\nimport { MarkerExtended } from './types'\r\n\r\nexport class Cluster {\r\n  markerClusterer: Clusterer\r\n  map: google.maps.Map | google.maps.StreetViewPanorama | null\r\n  gridSize: number\r\n  minClusterSize: number\r\n  averageCenter: boolean\r\n  markers: MarkerExtended[]\r\n  center: google.maps.LatLng | undefined\r\n  bounds: google.maps.LatLngBounds | null\r\n  clusterIcon: ClusterIcon\r\n\r\n  constructor(markerClusterer: Clusterer) {\r\n    this.markerClusterer = markerClusterer\r\n\r\n    this.map = (this.markerClusterer as unknown as google.maps.OverlayView).getMap()\r\n\r\n    this.gridSize = this.markerClusterer.getGridSize()\r\n\r\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\r\n\r\n    this.averageCenter = this.markerClusterer.getAverageCenter()\r\n\r\n    this.markers = []\r\n\r\n    this.center = undefined\r\n\r\n    this.bounds = null\r\n\r\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\r\n\r\n    this.getSize = this.getSize.bind(this)\r\n    this.getMarkers = this.getMarkers.bind(this)\r\n    this.getCenter = this.getCenter.bind(this)\r\n    this.getMap = this.getMap.bind(this)\r\n    this.getClusterer = this.getClusterer.bind(this)\r\n    this.getBounds = this.getBounds.bind(this)\r\n    this.remove = this.remove.bind(this)\r\n    this.addMarker = this.addMarker.bind(this)\r\n    this.isMarkerInClusterBounds = this.isMarkerInClusterBounds.bind(this)\r\n    this.calculateBounds = this.calculateBounds.bind(this)\r\n    this.updateIcon = this.updateIcon.bind(this)\r\n    this.isMarkerAlreadyAdded = this.isMarkerAlreadyAdded.bind(this)\r\n  }\r\n\r\n  getSize(): number {\r\n    return this.markers.length\r\n  }\r\n\r\n  getMarkers(): MarkerExtended[] {\r\n    return this.markers\r\n  }\r\n\r\n  getCenter(): google.maps.LatLng | undefined {\r\n    return this.center\r\n  }\r\n\r\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama | null {\r\n    return this.map\r\n  }\r\n\r\n  getClusterer(): Clusterer {\r\n    return this.markerClusterer\r\n  }\r\n\r\n  getBounds(): google.maps.LatLngBounds {\r\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\r\n\r\n    const markers = this.getMarkers()\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      const position = markers[i].getPosition()\r\n\r\n      if (position) {\r\n        bounds.extend(position)\r\n      }\r\n    }\r\n\r\n    return bounds\r\n  }\r\n\r\n  remove() {\r\n    (this.clusterIcon as unknown as google.maps.OverlayView).setMap(null)\r\n\r\n    this.markers = []\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    delete this.markers\r\n  }\r\n\r\n  addMarker(marker: MarkerExtended): boolean {\r\n    if (this.isMarkerAlreadyAdded(marker)) {\r\n      return false\r\n    }\r\n\r\n    if (!this.center) {\r\n      const position = marker.getPosition()\r\n\r\n      if (position) {\r\n        this.center = position\r\n\r\n        this.calculateBounds()\r\n      }\r\n    } else {\r\n      if (this.averageCenter) {\r\n        const position = marker.getPosition()\r\n\r\n        if (position) {\r\n          const length = this.markers.length + 1\r\n\r\n          this.center = new google.maps.LatLng(\r\n            (this.center.lat() * (length - 1) + position.lat()) / length,\r\n            (this.center.lng() * (length - 1) + position.lng()) / length\r\n          )\r\n\r\n          this.calculateBounds()\r\n        }\r\n      }\r\n    }\r\n\r\n    marker.isAdded = true\r\n\r\n    this.markers.push(marker)\r\n\r\n    const mCount = this.markers.length\r\n\r\n    const maxZoom = this.markerClusterer.getMaxZoom()\r\n\r\n    const zoom = this.map?.getZoom()\r\n\r\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\r\n      // Zoomed in past max zoom, so show the marker.\r\n      if (marker.getMap() !== this.map) {\r\n        marker.setMap(this.map)\r\n      }\r\n    } else if (mCount < this.minClusterSize) {\r\n      // Min cluster size not reached so show the marker.\r\n      if (marker.getMap() !== this.map) {\r\n        marker.setMap(this.map)\r\n      }\r\n    } else if (mCount === this.minClusterSize) {\r\n      // Hide the markers that were showing.\r\n      for (let i = 0; i < mCount; i++) {\r\n        this.markers[i].setMap(null)\r\n      }\r\n    } else {\r\n      marker.setMap(null)\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\r\n    if (this.bounds !== null) {\r\n      const position = marker.getPosition()\r\n\r\n      if (position) {\r\n        return this.bounds.contains(position)\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  calculateBounds() {\r\n    this.bounds = this.markerClusterer.getExtendedBounds(\r\n      new google.maps.LatLngBounds(this.center, this.center)\r\n    )\r\n  }\r\n\r\n  updateIcon() {\r\n    const mCount = this.markers.length\r\n\r\n    const maxZoom = this.markerClusterer.getMaxZoom()\r\n\r\n    const zoom = this.map?.getZoom()\r\n\r\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\r\n      this.clusterIcon.hide()\r\n\r\n      return\r\n    }\r\n\r\n    if (mCount < this.minClusterSize) {\r\n      // Min cluster size not yet reached.\r\n      this.clusterIcon.hide()\r\n\r\n      return\r\n    }\r\n\r\n    if (this.center) {\r\n      this.clusterIcon.setCenter(this.center)\r\n    }\r\n\r\n    this.clusterIcon.useStyle(\r\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\r\n    )\r\n\r\n    this.clusterIcon.show()\r\n  }\r\n\r\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\r\n    if (this.markers.includes) {\r\n      return this.markers.includes(marker)\r\n    }\r\n\r\n    for (let i = 0; i < this.markers.length; i++) {\r\n      if (marker === this.markers[i]) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n","/* global google */\r\n/* eslint-disable filenames/match-regex */\r\nimport { Cluster } from './Cluster'\r\nimport { ClusterIcon } from './ClusterIcon'\r\n\r\nimport {\r\n  MarkerExtended,\r\n  ClustererOptions,\r\n  ClusterIconStyle,\r\n  TCalculator,\r\n  ClusterIconInfo,\r\n} from './types'\r\n\r\n/**\r\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\r\n * which is not a problem as max array length is 4294967296 (2**32)\r\n */\r\nfunction CALCULATOR(\r\n  markers: MarkerExtended[],\r\n  numStyles: number\r\n): ClusterIconInfo {\r\n  const count = markers.length\r\n\r\n  const numberOfDigits = count.toString().length\r\n\r\n  const index = Math.min(numberOfDigits, numStyles)\r\n\r\n  return {\r\n    text: count.toString(),\r\n    index,\r\n    title: '',\r\n  }\r\n}\r\n\r\nconst BATCH_SIZE = 2000\r\n\r\nconst BATCH_SIZE_IE = 500\r\n\r\nconst IMAGE_PATH =\r\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\r\n\r\nconst IMAGE_EXTENSION = 'png'\r\n\r\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\r\n\r\nconst CLUSTERER_CLASS = 'cluster'\r\n\r\nexport class Clusterer {\r\n  markers: MarkerExtended[]\r\n  clusters: Cluster[]\r\n  listeners: google.maps.MapsEventListener[]\r\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\r\n  ready: boolean\r\n  gridSize: number\r\n  minClusterSize: number\r\n  maxZoom: number | null\r\n  styles: ClusterIconStyle[]\r\n  title: string\r\n  zoomOnClick: boolean\r\n  averageCenter: boolean\r\n  ignoreHidden: boolean\r\n  enableRetinaIcons: boolean\r\n  imagePath: string\r\n  imageExtension: string\r\n  imageSizes: number[]\r\n  calculator: TCalculator\r\n  batchSize: number\r\n  batchSizeIE: number\r\n  clusterClass: string\r\n  timerRefStatic: number | null\r\n\r\n  constructor(\r\n    map: google.maps.Map,\r\n    optMarkers: MarkerExtended[] = [],\r\n    optOptions: ClustererOptions = {}\r\n  ) {\r\n    this.getMinimumClusterSize = this.getMinimumClusterSize.bind(this)\r\n    this.setMinimumClusterSize = this.setMinimumClusterSize.bind(this)\r\n    this.getEnableRetinaIcons = this.getEnableRetinaIcons.bind(this)\r\n    this.setEnableRetinaIcons = this.setEnableRetinaIcons.bind(this)\r\n    this.addToClosestCluster = this.addToClosestCluster.bind(this)\r\n    this.getImageExtension = this.getImageExtension.bind(this)\r\n    this.setImageExtension = this.setImageExtension.bind(this)\r\n    this.getExtendedBounds = this.getExtendedBounds.bind(this)\r\n    this.getAverageCenter = this.getAverageCenter.bind(this)\r\n    this.setAverageCenter = this.setAverageCenter.bind(this)\r\n    this.getTotalClusters = this.getTotalClusters.bind(this)\r\n    this.fitMapToMarkers = this.fitMapToMarkers.bind(this)\r\n    this.getIgnoreHidden = this.getIgnoreHidden.bind(this)\r\n    this.setIgnoreHidden = this.setIgnoreHidden.bind(this)\r\n    this.getClusterClass = this.getClusterClass.bind(this)\r\n    this.setClusterClass = this.setClusterClass.bind(this)\r\n    this.getTotalMarkers = this.getTotalMarkers.bind(this)\r\n    this.getZoomOnClick = this.getZoomOnClick.bind(this)\r\n    this.setZoomOnClick = this.setZoomOnClick.bind(this)\r\n    this.getBatchSizeIE = this.getBatchSizeIE.bind(this)\r\n    this.setBatchSizeIE = this.setBatchSizeIE.bind(this)\r\n    this.createClusters = this.createClusters.bind(this)\r\n    this.onZoomChanged = this.onZoomChanged.bind(this)\r\n    this.getImageSizes = this.getImageSizes.bind(this)\r\n    this.setImageSizes = this.setImageSizes.bind(this)\r\n    this.getCalculator = this.getCalculator.bind(this)\r\n    this.setCalculator = this.setCalculator.bind(this)\r\n    this.removeMarkers = this.removeMarkers.bind(this)\r\n    this.resetViewport = this.resetViewport.bind(this)\r\n    this.getImagePath = this.getImagePath.bind(this)\r\n    this.setImagePath = this.setImagePath.bind(this)\r\n    this.pushMarkerTo = this.pushMarkerTo.bind(this)\r\n    this.removeMarker = this.removeMarker.bind(this)\r\n    this.clearMarkers = this.clearMarkers.bind(this)\r\n    this.setupStyles = this.setupStyles.bind(this)\r\n    this.getGridSize = this.getGridSize.bind(this)\r\n    this.setGridSize = this.setGridSize.bind(this)\r\n    this.getClusters = this.getClusters.bind(this)\r\n    this.getMaxZoom = this.getMaxZoom.bind(this)\r\n    this.setMaxZoom = this.setMaxZoom.bind(this)\r\n    this.getMarkers = this.getMarkers.bind(this)\r\n    this.addMarkers = this.addMarkers.bind(this)\r\n    this.getStyles = this.getStyles.bind(this)\r\n    this.setStyles = this.setStyles.bind(this)\r\n    this.addMarker = this.addMarker.bind(this)\r\n    this.onRemove = this.onRemove.bind(this)\r\n    this.getTitle = this.getTitle.bind(this)\r\n    this.setTitle = this.setTitle.bind(this)\r\n    this.repaint = this.repaint.bind(this)\r\n    this.onIdle = this.onIdle.bind(this)\r\n    this.redraw = this.redraw.bind(this)\r\n    this.extend = this.extend.bind(this)\r\n    this.onAdd = this.onAdd.bind(this)\r\n    this.draw = this.draw.bind(this)\r\n\r\n    this.extend(Clusterer, google.maps.OverlayView)\r\n\r\n    this.markers = []\r\n    this.clusters = []\r\n    this.listeners = []\r\n    this.activeMap = null\r\n    this.ready = false\r\n    this.gridSize = optOptions.gridSize || 60\r\n    this.minClusterSize = optOptions.minimumClusterSize || 2\r\n    this.maxZoom = optOptions.maxZoom || null\r\n    this.styles = optOptions.styles || []\r\n\r\n    this.title = optOptions.title || ''\r\n\r\n    this.zoomOnClick = true\r\n\r\n    if (optOptions.zoomOnClick !== undefined) {\r\n      this.zoomOnClick = optOptions.zoomOnClick\r\n    }\r\n\r\n    this.averageCenter = false\r\n\r\n    if (optOptions.averageCenter !== undefined) {\r\n      this.averageCenter = optOptions.averageCenter\r\n    }\r\n\r\n    this.ignoreHidden = false\r\n\r\n    if (optOptions.ignoreHidden !== undefined) {\r\n      this.ignoreHidden = optOptions.ignoreHidden\r\n    }\r\n\r\n    this.enableRetinaIcons = false\r\n\r\n    if (optOptions.enableRetinaIcons !== undefined) {\r\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\r\n    }\r\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\r\n\r\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\r\n\r\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\r\n\r\n    this.calculator = optOptions.calculator || CALCULATOR\r\n\r\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\r\n\r\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\r\n\r\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\r\n\r\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\r\n      // Try to avoid IE timeout when processing a huge number of markers:\r\n      this.batchSize = this.batchSizeIE\r\n    }\r\n\r\n    this.timerRefStatic = null\r\n\r\n    this.setupStyles()\r\n\r\n    this.addMarkers(optMarkers, true);\r\n\r\n    (this as unknown as google.maps.OverlayView).setMap(map) // Note: this causes onAdd to be called\r\n  }\r\n\r\n  onZoomChanged() {\r\n    this.resetViewport(false)\r\n\r\n    // Workaround for this Google bug: when map is at level 0 and \"-\" of\r\n    // zoom slider is clicked, a \"zoom_changed\" event is fired even though\r\n    // the map doesn't zoom out any further. In this situation, no \"idle\"\r\n    // event is triggered so the cluster markers that have been removed\r\n    // do not get redrawn. Same goes for a zoom in at maxZoom.\r\n    if (\r\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === ((this as unknown as google.maps.OverlayView).get('minZoom') || 0) ||\r\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === (this as unknown as google.maps.OverlayView).get('maxZoom')\r\n    ) {\r\n      google.maps.event.trigger(this, 'idle')\r\n    }\r\n  }\r\n\r\n  onIdle() {\r\n    this.redraw()\r\n  }\r\n\r\n  onAdd() {\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    this.activeMap = map\r\n\r\n    this.ready = true\r\n\r\n    this.repaint()\r\n\r\n    if (map !== null) {\r\n      // Add the map event listeners\r\n      this.listeners = [\r\n        google.maps.event.addListener(\r\n          map,\r\n          'zoom_changed',\r\n          this.onZoomChanged\r\n        ),\r\n        google.maps.event.addListener(\r\n          map,\r\n          'idle',\r\n          this.onIdle\r\n        ),\r\n      ]\r\n    }\r\n  }\r\n\r\n  onRemove() {\r\n    // Put all the managed markers back on the map:\r\n    for (let i = 0; i < this.markers.length; i++) {\r\n      if (this.markers[i].getMap() !== this.activeMap) {\r\n        this.markers[i].setMap(this.activeMap)\r\n      }\r\n    }\r\n\r\n    // Remove all clusters:\r\n    for (let i = 0; i < this.clusters.length; i++) {\r\n      this.clusters[i].remove()\r\n    }\r\n\r\n    this.clusters = []\r\n\r\n    // Remove map event listeners:\r\n    for (let i = 0; i < this.listeners.length; i++) {\r\n      google.maps.event.removeListener(this.listeners[i])\r\n    }\r\n\r\n    this.listeners = []\r\n\r\n    this.activeMap = null\r\n\r\n    this.ready = false\r\n  }\r\n\r\n  draw() { return }\r\n\r\n  setupStyles() {\r\n    if (this.styles.length > 0) {\r\n      return\r\n    }\r\n\r\n    for (let i = 0; i < this.imageSizes.length; i++) {\r\n      this.styles.push({\r\n        url: `${this.imagePath + (i + 1)}.${this.imageExtension}`,\r\n        height: this.imageSizes[i],\r\n        width: this.imageSizes[i],\r\n      })\r\n    }\r\n  }\r\n\r\n  fitMapToMarkers() {\r\n    const markers = this.getMarkers()\r\n\r\n    const bounds = new google.maps.LatLngBounds()\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      const position = markers[i].getPosition()\r\n\r\n      if (position) {\r\n        bounds.extend(position)\r\n      }\r\n    }\r\n\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    if (map !== null && 'fitBounds' in map) {\r\n      map.fitBounds(bounds)\r\n    }\r\n\r\n  }\r\n\r\n  getGridSize(): number {\r\n    return this.gridSize\r\n  }\r\n\r\n  setGridSize(gridSize: number) {\r\n    this.gridSize = gridSize\r\n  }\r\n\r\n  getMinimumClusterSize(): number {\r\n    return this.minClusterSize\r\n  }\r\n\r\n  setMinimumClusterSize(minimumClusterSize: number) {\r\n    this.minClusterSize = minimumClusterSize\r\n  }\r\n\r\n  getMaxZoom(): number | null {\r\n    return this.maxZoom\r\n  }\r\n\r\n  setMaxZoom(maxZoom: number) {\r\n    this.maxZoom = maxZoom\r\n  }\r\n\r\n  getStyles(): ClusterIconStyle[] {\r\n    return this.styles\r\n  }\r\n\r\n  setStyles(styles: ClusterIconStyle[]) {\r\n    this.styles = styles\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.title\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.title = title\r\n  }\r\n\r\n  getZoomOnClick(): boolean {\r\n    return this.zoomOnClick\r\n  }\r\n\r\n  setZoomOnClick(zoomOnClick: boolean) {\r\n    this.zoomOnClick = zoomOnClick\r\n  }\r\n\r\n  getAverageCenter(): boolean {\r\n    return this.averageCenter\r\n  }\r\n\r\n  setAverageCenter(averageCenter: boolean) {\r\n    this.averageCenter = averageCenter\r\n  }\r\n\r\n  getIgnoreHidden(): boolean {\r\n    return this.ignoreHidden\r\n  }\r\n\r\n  setIgnoreHidden(ignoreHidden: boolean) {\r\n    this.ignoreHidden = ignoreHidden\r\n  }\r\n\r\n  getEnableRetinaIcons(): boolean {\r\n    return this.enableRetinaIcons\r\n  }\r\n\r\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\r\n    this.enableRetinaIcons = enableRetinaIcons\r\n  }\r\n\r\n  getImageExtension(): string {\r\n    return this.imageExtension\r\n  }\r\n\r\n  setImageExtension(imageExtension: string) {\r\n    this.imageExtension = imageExtension\r\n  }\r\n\r\n  getImagePath(): string {\r\n    return this.imagePath\r\n  }\r\n\r\n  setImagePath(imagePath: string) {\r\n    this.imagePath = imagePath\r\n  }\r\n\r\n  getImageSizes(): number[] {\r\n    return this.imageSizes\r\n  }\r\n\r\n  setImageSizes(imageSizes: number[]) {\r\n    this.imageSizes = imageSizes\r\n  }\r\n\r\n  getCalculator(): TCalculator {\r\n    return this.calculator\r\n  }\r\n\r\n  setCalculator(calculator: TCalculator) {\r\n    this.calculator = calculator\r\n  }\r\n\r\n  getBatchSizeIE(): number {\r\n    return this.batchSizeIE\r\n  }\r\n\r\n  setBatchSizeIE(batchSizeIE: number) {\r\n    this.batchSizeIE = batchSizeIE\r\n  }\r\n\r\n  getClusterClass(): string {\r\n    return this.clusterClass\r\n  }\r\n\r\n  setClusterClass(clusterClass: string) {\r\n    this.clusterClass = clusterClass\r\n  }\r\n\r\n  getMarkers(): MarkerExtended[] {\r\n    return this.markers\r\n  }\r\n\r\n  getTotalMarkers(): number {\r\n    return this.markers.length\r\n  }\r\n\r\n  getClusters(): Cluster[] {\r\n    return this.clusters\r\n  }\r\n\r\n  getTotalClusters(): number {\r\n    return this.clusters.length\r\n  }\r\n\r\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\r\n    this.pushMarkerTo(marker)\r\n\r\n    if (!optNoDraw) {\r\n      this.redraw()\r\n    }\r\n  }\r\n\r\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\r\n    for (const key in markers) {\r\n      if (Object.prototype.hasOwnProperty.call(markers, key)) {\r\n        this.pushMarkerTo(markers[key])\r\n      }\r\n    }\r\n\r\n    if (!optNoDraw) {\r\n      this.redraw()\r\n    }\r\n  }\r\n\r\n  pushMarkerTo(marker: MarkerExtended) {\r\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\r\n    if (marker.getDraggable()) {\r\n      google.maps.event.addListener(marker, 'dragend', () => {\r\n        if (this.ready) {\r\n          marker.isAdded = false\r\n\r\n          this.repaint()\r\n        }\r\n      })\r\n    }\r\n\r\n    marker.isAdded = false\r\n\r\n    this.markers.push(marker)\r\n  }\r\n\r\n  removeMarker_(marker: MarkerExtended): boolean {\r\n    let index = -1\r\n\r\n    if (this.markers.indexOf) {\r\n      index = this.markers.indexOf(marker)\r\n    } else {\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        if (marker === this.markers[i]) {\r\n          index = i\r\n\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (index === -1) {\r\n      // Marker is not in our list of markers, so do nothing:\r\n      return false\r\n    }\r\n\r\n    marker.setMap(null)\r\n\r\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\r\n\r\n    return true\r\n  }\r\n\r\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\r\n    const removed = this.removeMarker_(marker)\r\n\r\n    if (!optNoDraw && removed) {\r\n      this.repaint()\r\n    }\r\n\r\n    return removed\r\n  }\r\n\r\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\r\n    let removed = false\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      removed = removed || this.removeMarker_(markers[i])\r\n    }\r\n\r\n    if (!optNoDraw && removed) {\r\n      this.repaint()\r\n    }\r\n\r\n    return removed\r\n  }\r\n\r\n  clearMarkers() {\r\n    this.resetViewport(true)\r\n\r\n    this.markers = []\r\n  }\r\n\r\n  repaint() {\r\n    const oldClusters = this.clusters.slice()\r\n\r\n    this.clusters = []\r\n\r\n    this.resetViewport(false)\r\n\r\n    this.redraw()\r\n\r\n    // Remove the old clusters.\r\n    // Do it in a timeout to prevent blinking effect.\r\n    setTimeout(function timeout() {\r\n      for (let i = 0; i < oldClusters.length; i++) {\r\n        oldClusters[i].remove()\r\n      }\r\n    }, 0)\r\n  }\r\n\r\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\r\n    const projection = (this as unknown as google.maps.OverlayView).getProjection()\r\n\r\n    // Convert the points to pixels and the extend out by the grid size.\r\n    const trPix = projection.fromLatLngToDivPixel(\r\n      // Turn the bounds into latlng.\r\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\r\n    )\r\n\r\n    if (trPix !== null) {\r\n      trPix.x += this.gridSize\r\n      trPix.y -= this.gridSize\r\n    }\r\n\r\n    const blPix = projection.fromLatLngToDivPixel(\r\n      // Turn the bounds into latlng.\r\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\r\n    )\r\n\r\n    if (blPix !== null) {\r\n      blPix.x -= this.gridSize\r\n      blPix.y += this.gridSize\r\n    }\r\n\r\n\r\n    // Extend the bounds to contain the new bounds.\r\n    if (trPix !== null) {\r\n      // Convert the pixel points back to LatLng nw\r\n      const point1 = projection.fromDivPixelToLatLng(trPix)\r\n\r\n      if (point1 !== null) {\r\n        bounds.extend(point1)\r\n      }\r\n    }\r\n\r\n    if (blPix !== null) {\r\n      // Convert the pixel points back to LatLng sw\r\n      const point2 =  projection.fromDivPixelToLatLng(blPix)\r\n\r\n      if (point2 !== null) {\r\n        bounds.extend(\r\n          point2\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n    return bounds\r\n  }\r\n\r\n  redraw() {\r\n    // Redraws all the clusters.\r\n    this.createClusters(0)\r\n  }\r\n\r\n  resetViewport(optHide: boolean) {\r\n    // Remove all the clusters\r\n    for (let i = 0; i < this.clusters.length; i++) {\r\n      this.clusters[i].remove()\r\n    }\r\n\r\n    this.clusters = []\r\n\r\n    // Reset the markers to not be added and to be removed from the map.\r\n    for (let i = 0; i < this.markers.length; i++) {\r\n      const marker = this.markers[i]\r\n\r\n      marker.isAdded = false\r\n\r\n      if (optHide) {\r\n        marker.setMap(null)\r\n      }\r\n    }\r\n  }\r\n\r\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\r\n    const R = 6371 // Radius of the Earth in km\r\n\r\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\r\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\r\n\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((p1.lat() * Math.PI) / 180) *\r\n        Math.cos((p2.lat() * Math.PI) / 180) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2)\r\n\r\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\r\n  }\r\n\r\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\r\n    const position = marker.getPosition()\r\n\r\n    if (position) {\r\n      return bounds.contains(position)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  addToClosestCluster(marker: MarkerExtended) {\r\n    let cluster\r\n\r\n    let distance = 40000 // Some large number\r\n\r\n    let clusterToAddTo = null\r\n\r\n    for (let i = 0; i < this.clusters.length; i++) {\r\n      cluster = this.clusters[i]\r\n\r\n      const center = cluster.getCenter()\r\n\r\n      const position = marker.getPosition()\r\n\r\n      if (center && position) {\r\n        const d = this.distanceBetweenPoints(center, position)\r\n\r\n        if (d < distance) {\r\n          distance = d\r\n\r\n          clusterToAddTo = cluster\r\n        }\r\n      }\r\n    }\r\n\r\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\r\n      clusterToAddTo.addMarker(marker)\r\n    } else {\r\n      cluster = new Cluster(this)\r\n\r\n      cluster.addMarker(marker)\r\n\r\n      this.clusters.push(cluster)\r\n    }\r\n  }\r\n\r\n  createClusters(iFirst: number) {\r\n    if (!this.ready) {\r\n      return\r\n    }\r\n\r\n    // Cancel previous batch processing if we're working on the first batch:\r\n    if (iFirst === 0) {\r\n      /**\r\n       * This event is fired when the <code>Clusterer</code> begins\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringbegin\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\r\n      google.maps.event.trigger(this, 'clusteringbegin', this)\r\n\r\n      if (this.timerRefStatic !== null) {\r\n        window.clearTimeout(this.timerRefStatic)\r\n\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        delete this.timerRefStatic\r\n      }\r\n    }\r\n\r\n    const map = (this as unknown as google.maps.OverlayView).getMap()\r\n\r\n    const bounds = map !== null && 'getBounds' in map ? map.getBounds() : null\r\n\r\n    const zoom =  map?.getZoom() || 0\r\n    // Get our current map view bounds.\r\n    // Create a new bounds object so we don't affect the map.\r\n    //\r\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\r\n    const mapBounds = zoom > 3\r\n        ? new google.maps.LatLngBounds(\r\n            bounds?.getSouthWest(),\r\n            bounds?.getNorthEast()\r\n          )\r\n        : new google.maps.LatLngBounds(\r\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\r\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\r\n          )\r\n\r\n    const extendedMapBounds = this.getExtendedBounds(mapBounds)\r\n\r\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\r\n\r\n    for (let i = iFirst; i < iLast; i++) {\r\n      const marker = this.markers[i]\r\n\r\n      if (!marker.isAdded && this.isMarkerInBounds(marker, extendedMapBounds) && (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible()))) {\r\n        this.addToClosestCluster(marker)\r\n      }\r\n    }\r\n\r\n    if (iLast < this.markers.length) {\r\n      this.timerRefStatic = window.setTimeout(\r\n        () => {\r\n          this.createClusters(iLast)\r\n        },\r\n        0\r\n      )\r\n    } else {\r\n      this.timerRefStatic = null\r\n\r\n      /**\r\n       * This event is fired when the <code>Clusterer</code> stops\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringend\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\r\n      google.maps.event.trigger(this, 'clusteringend', this)\r\n\r\n      for (let i = 0; i < this.clusters.length; i++) {\r\n        this.clusters[i].updateIcon()\r\n      }\r\n    }\r\n  }\r\n\r\n  extend<A extends typeof ClusterIcon | typeof Clusterer>(obj1: A, obj2: typeof google.maps.OverlayView): A {\r\n    return function applyExtend(this: A, object: typeof google.maps.OverlayView): A {\r\n      for (const property in object.prototype) {\r\n        // @ts-ignore\r\n        this.prototype[property] = object.prototype[property  as keyof google.maps.OverlayView]\r\n      }\r\n\r\n      return this\r\n    }.apply<A, [typeof google.maps.OverlayView], any>(obj1, [obj2])\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}